// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/showcase/v1alpha3/testing.proto

package genproto // import "github.com/googleapis/gapic-showcase/server/genproto"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The specification versions understood by Showcase.
type Session_Version int32

const (
	// Unspecified version. If passed on creation, the session will default
	// to using the latest stable release.
	Session_VERSION_UNSPECIFIED Session_Version = 0
	// The latest v1. Currently, this is v1.0.
	Session_V1_LATEST Session_Version = 1
	// v1.0. (Until the spec is "GA", this will be a moving target.)
	Session_V1_0 Session_Version = 2
)

var Session_Version_name = map[int32]string{
	0: "VERSION_UNSPECIFIED",
	1: "V1_LATEST",
	2: "V1_0",
}
var Session_Version_value = map[string]int32{
	"VERSION_UNSPECIFIED": 0,
	"V1_LATEST":           1,
	"V1_0":                2,
}

func (x Session_Version) String() string {
	return proto.EnumName(Session_Version_name, int32(x))
}
func (Session_Version) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{0, 0}
}

// The topline state of the report.
type ReportSessionResponse_Result int32

const (
	ReportSessionResponse_RESULT_UNSPECIFIED ReportSessionResponse_Result = 0
	// The session is complete, and everything passed.
	ReportSessionResponse_PASSED ReportSessionResponse_Result = 1
	// The session had an explicit failure.
	ReportSessionResponse_FAILED ReportSessionResponse_Result = 2
	// The session is incomplete. This is a failure response.
	ReportSessionResponse_INCOMPLETE ReportSessionResponse_Result = 3
)

var ReportSessionResponse_Result_name = map[int32]string{
	0: "RESULT_UNSPECIFIED",
	1: "PASSED",
	2: "FAILED",
	3: "INCOMPLETE",
}
var ReportSessionResponse_Result_value = map[string]int32{
	"RESULT_UNSPECIFIED": 0,
	"PASSED":             1,
	"FAILED":             2,
	"INCOMPLETE":         3,
}

func (x ReportSessionResponse_Result) String() string {
	return proto.EnumName(ReportSessionResponse_Result_name, int32(x))
}
func (ReportSessionResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{7, 0}
}

// Whether or not a test is required, recommended, or optional.
type Test_ExpectationLevel int32

const (
	Test_EXPECTATION_LEVEL_UNSPECIFIED Test_ExpectationLevel = 0
	// This test is strictly required.
	Test_REQUIRED Test_ExpectationLevel = 1
	// This test is recommended.
	//
	// If a generator explicitly ignores a recommended test (see `DeleteTest`),
	// then the report may still pass, but with a warning.
	//
	// If a generator skips a recommended test and does not explicitly
	// express that intention, the report will fail.
	Test_RECOMMENDED Test_ExpectationLevel = 2
	// This test is optional.
	//
	// If a generator explicitly ignores an optional test (see `DeleteTest`),
	// then the report may still pass, and no warning will be issued.
	//
	// If a generator skips an optional test and does not explicitly
	// express that intention, the report may still pass, but with a
	// warning.
	Test_OPTIONAL Test_ExpectationLevel = 3
)

var Test_ExpectationLevel_name = map[int32]string{
	0: "EXPECTATION_LEVEL_UNSPECIFIED",
	1: "REQUIRED",
	2: "RECOMMENDED",
	3: "OPTIONAL",
}
var Test_ExpectationLevel_value = map[string]int32{
	"EXPECTATION_LEVEL_UNSPECIFIED": 0,
	"REQUIRED":                      1,
	"RECOMMENDED":                   2,
	"OPTIONAL":                      3,
}

func (x Test_ExpectationLevel) String() string {
	return proto.EnumName(Test_ExpectationLevel_name, int32(x))
}
func (Test_ExpectationLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{8, 0}
}

// The different potential types of issues.
type Issue_Type int32

const (
	Issue_TYPE_UNSPECIFIED Issue_Type = 0
	// The test was never instrumented.
	Issue_SKIPPED Issue_Type = 1
	// The test was started but never confirmed.
	Issue_PENDING Issue_Type = 2
	// The test was instrumented, but Showcase got an unexpected
	// value when the generator tried to confirm success.
	Issue_INCORRECT_CONFIRMATION Issue_Type = 3
)

var Issue_Type_name = map[int32]string{
	0: "TYPE_UNSPECIFIED",
	1: "SKIPPED",
	2: "PENDING",
	3: "INCORRECT_CONFIRMATION",
}
var Issue_Type_value = map[string]int32{
	"TYPE_UNSPECIFIED":       0,
	"SKIPPED":                1,
	"PENDING":                2,
	"INCORRECT_CONFIRMATION": 3,
}

func (x Issue_Type) String() string {
	return proto.EnumName(Issue_Type_name, int32(x))
}
func (Issue_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{9, 0}
}

// Severity levels.
type Issue_Severity int32

const (
	Issue_SEVERITY_UNSPECIFIED Issue_Severity = 0
	// Errors.
	Issue_ERROR Issue_Severity = 1
	// Warnings.
	Issue_WARNING Issue_Severity = 2
)

var Issue_Severity_name = map[int32]string{
	0: "SEVERITY_UNSPECIFIED",
	1: "ERROR",
	2: "WARNING",
}
var Issue_Severity_value = map[string]int32{
	"SEVERITY_UNSPECIFIED": 0,
	"ERROR":                1,
	"WARNING":              2,
}

func (x Issue_Severity) String() string {
	return proto.EnumName(Issue_Severity_name, int32(x))
}
func (Issue_Severity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{9, 1}
}

// A session is a suite of tests, generally being made in the context
// of testing code generation.
//
// A session defines tests it may expect, based on which version of the
// code generation spec is in use.
type Session struct {
	// The name of the session. The ID must conform to ^[a-z]+$
	// If this is not provided, Showcase chooses one at random.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The version this session is using.
	Version              Session_Version `protobuf:"varint,2,opt,name=version,proto3,enum=google.showcase.v1alpha3.Session_Version" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{0}
}
func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (dst *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(dst, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Session) GetVersion() Session_Version {
	if m != nil {
		return m.Version
	}
	return Session_VERSION_UNSPECIFIED
}

// The request for the CreateSession method.
type CreateSessionRequest struct {
	// The session to be created.
	// Sessions are immutable once they are created (although they can
	// be deleted).
	Session              *Session `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSessionRequest) Reset()         { *m = CreateSessionRequest{} }
func (m *CreateSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSessionRequest) ProtoMessage()    {}
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{1}
}
func (m *CreateSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSessionRequest.Unmarshal(m, b)
}
func (m *CreateSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSessionRequest.Marshal(b, m, deterministic)
}
func (dst *CreateSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSessionRequest.Merge(dst, src)
}
func (m *CreateSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSessionRequest.Size(m)
}
func (m *CreateSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSessionRequest proto.InternalMessageInfo

func (m *CreateSessionRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

// The request for the GetSession method.
type GetSessionRequest struct {
	// The session to be retrieved.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSessionRequest) Reset()         { *m = GetSessionRequest{} }
func (m *GetSessionRequest) String() string { return proto.CompactTextString(m) }
func (*GetSessionRequest) ProtoMessage()    {}
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{2}
}
func (m *GetSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSessionRequest.Unmarshal(m, b)
}
func (m *GetSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSessionRequest.Marshal(b, m, deterministic)
}
func (dst *GetSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSessionRequest.Merge(dst, src)
}
func (m *GetSessionRequest) XXX_Size() int {
	return xxx_messageInfo_GetSessionRequest.Size(m)
}
func (m *GetSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSessionRequest proto.InternalMessageInfo

func (m *GetSessionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The request for the ListSessions method.
type ListSessionsRequest struct {
	// The maximum number of sessions to return per page.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The page token, for retrieving subsequent pages.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSessionsRequest) Reset()         { *m = ListSessionsRequest{} }
func (m *ListSessionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListSessionsRequest) ProtoMessage()    {}
func (*ListSessionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{3}
}
func (m *ListSessionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSessionsRequest.Unmarshal(m, b)
}
func (m *ListSessionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSessionsRequest.Marshal(b, m, deterministic)
}
func (dst *ListSessionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSessionsRequest.Merge(dst, src)
}
func (m *ListSessionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListSessionsRequest.Size(m)
}
func (m *ListSessionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSessionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSessionsRequest proto.InternalMessageInfo

func (m *ListSessionsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListSessionsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response for the ListSessions method.
type ListSessionsResponse struct {
	// The sessions being returned.
	Sessions []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	// The next page token, if any.
	// An empty value here means the last page has been reached.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSessionsResponse) Reset()         { *m = ListSessionsResponse{} }
func (m *ListSessionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListSessionsResponse) ProtoMessage()    {}
func (*ListSessionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{4}
}
func (m *ListSessionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSessionsResponse.Unmarshal(m, b)
}
func (m *ListSessionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSessionsResponse.Marshal(b, m, deterministic)
}
func (dst *ListSessionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSessionsResponse.Merge(dst, src)
}
func (m *ListSessionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListSessionsResponse.Size(m)
}
func (m *ListSessionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSessionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSessionsResponse proto.InternalMessageInfo

func (m *ListSessionsResponse) GetSessions() []*Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func (m *ListSessionsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request for the DeleteSession method.
type DeleteSessionRequest struct {
	// The session to be deleted.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSessionRequest) Reset()         { *m = DeleteSessionRequest{} }
func (m *DeleteSessionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSessionRequest) ProtoMessage()    {}
func (*DeleteSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{5}
}
func (m *DeleteSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSessionRequest.Unmarshal(m, b)
}
func (m *DeleteSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSessionRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSessionRequest.Merge(dst, src)
}
func (m *DeleteSessionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSessionRequest.Size(m)
}
func (m *DeleteSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSessionRequest proto.InternalMessageInfo

func (m *DeleteSessionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request message for reporting on a session.
type ReportSessionRequest struct {
	// The session to be reported on.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportSessionRequest) Reset()         { *m = ReportSessionRequest{} }
func (m *ReportSessionRequest) String() string { return proto.CompactTextString(m) }
func (*ReportSessionRequest) ProtoMessage()    {}
func (*ReportSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{6}
}
func (m *ReportSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportSessionRequest.Unmarshal(m, b)
}
func (m *ReportSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportSessionRequest.Marshal(b, m, deterministic)
}
func (dst *ReportSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportSessionRequest.Merge(dst, src)
}
func (m *ReportSessionRequest) XXX_Size() int {
	return xxx_messageInfo_ReportSessionRequest.Size(m)
}
func (m *ReportSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportSessionRequest proto.InternalMessageInfo

func (m *ReportSessionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Response message for reporting on a session.
type ReportSessionResponse struct {
	// The state of the report.
	Result ReportSessionResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=google.showcase.v1alpha3.ReportSessionResponse_Result" json:"result,omitempty"`
	// The test runs of this session.
	TestRuns             []*TestRun `protobuf:"bytes,2,rep,name=test_runs,json=testRuns,proto3" json:"test_runs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReportSessionResponse) Reset()         { *m = ReportSessionResponse{} }
func (m *ReportSessionResponse) String() string { return proto.CompactTextString(m) }
func (*ReportSessionResponse) ProtoMessage()    {}
func (*ReportSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{7}
}
func (m *ReportSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportSessionResponse.Unmarshal(m, b)
}
func (m *ReportSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportSessionResponse.Marshal(b, m, deterministic)
}
func (dst *ReportSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportSessionResponse.Merge(dst, src)
}
func (m *ReportSessionResponse) XXX_Size() int {
	return xxx_messageInfo_ReportSessionResponse.Size(m)
}
func (m *ReportSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportSessionResponse proto.InternalMessageInfo

func (m *ReportSessionResponse) GetResult() ReportSessionResponse_Result {
	if m != nil {
		return m.Result
	}
	return ReportSessionResponse_RESULT_UNSPECIFIED
}

func (m *ReportSessionResponse) GetTestRuns() []*TestRun {
	if m != nil {
		return m.TestRuns
	}
	return nil
}

type Test struct {
	// The name of the test.
	// The tests/* portion of the names are hard-coded, and do not change
	// from session to session.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The expectation level for this test.
	ExpectationLevel Test_ExpectationLevel `protobuf:"varint,2,opt,name=expectation_level,json=expectationLevel,proto3,enum=google.showcase.v1alpha3.Test_ExpectationLevel" json:"expectation_level,omitempty"`
	// A description of the test.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The blueprints that will satisfy this test. There may be multiple blueprints
	// that can signal to the server that this test case is being exercised. Although
	// multiple blueprints are specified, only a single blueprint needs to be run to
	// signal that the test case was exercised.
	Blueprints           []*Test_Blueprint `protobuf:"bytes,4,rep,name=blueprints,proto3" json:"blueprints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{8}
}
func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (dst *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(dst, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

func (m *Test) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Test) GetExpectationLevel() Test_ExpectationLevel {
	if m != nil {
		return m.ExpectationLevel
	}
	return Test_EXPECTATION_LEVEL_UNSPECIFIED
}

func (m *Test) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Test) GetBlueprints() []*Test_Blueprint {
	if m != nil {
		return m.Blueprints
	}
	return nil
}

// A blueprint is an explicit definition of methods and requests that are needed
// to be made to test this specific test case. Ideally this would be represented
// by something more robust like CEL, but as of writing this, I am unsure if CEL
// is ready.
type Test_Blueprint struct {
	// The name of this blueprint.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A description of this blueprint.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The initial request to trigger this test.
	Request *Test_Blueprint_Invocation `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	// An ordered list of method calls that can be called to trigger this test.
	AdditionalRequests   []*Test_Blueprint_Invocation `protobuf:"bytes,4,rep,name=additional_requests,json=additionalRequests,proto3" json:"additional_requests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Test_Blueprint) Reset()         { *m = Test_Blueprint{} }
func (m *Test_Blueprint) String() string { return proto.CompactTextString(m) }
func (*Test_Blueprint) ProtoMessage()    {}
func (*Test_Blueprint) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{8, 0}
}
func (m *Test_Blueprint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test_Blueprint.Unmarshal(m, b)
}
func (m *Test_Blueprint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test_Blueprint.Marshal(b, m, deterministic)
}
func (dst *Test_Blueprint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test_Blueprint.Merge(dst, src)
}
func (m *Test_Blueprint) XXX_Size() int {
	return xxx_messageInfo_Test_Blueprint.Size(m)
}
func (m *Test_Blueprint) XXX_DiscardUnknown() {
	xxx_messageInfo_Test_Blueprint.DiscardUnknown(m)
}

var xxx_messageInfo_Test_Blueprint proto.InternalMessageInfo

func (m *Test_Blueprint) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Test_Blueprint) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Test_Blueprint) GetRequest() *Test_Blueprint_Invocation {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Test_Blueprint) GetAdditionalRequests() []*Test_Blueprint_Invocation {
	if m != nil {
		return m.AdditionalRequests
	}
	return nil
}

// A message representing a method invocation.
type Test_Blueprint_Invocation struct {
	// The fully qualified name of the showcase method to be invoked.
	Method string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	// The request to be made if a specific request is necessary.
	SerializedRequest    []byte   `protobuf:"bytes,2,opt,name=serialized_request,json=serializedRequest,proto3" json:"serialized_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Test_Blueprint_Invocation) Reset()         { *m = Test_Blueprint_Invocation{} }
func (m *Test_Blueprint_Invocation) String() string { return proto.CompactTextString(m) }
func (*Test_Blueprint_Invocation) ProtoMessage()    {}
func (*Test_Blueprint_Invocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{8, 0, 0}
}
func (m *Test_Blueprint_Invocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test_Blueprint_Invocation.Unmarshal(m, b)
}
func (m *Test_Blueprint_Invocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test_Blueprint_Invocation.Marshal(b, m, deterministic)
}
func (dst *Test_Blueprint_Invocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test_Blueprint_Invocation.Merge(dst, src)
}
func (m *Test_Blueprint_Invocation) XXX_Size() int {
	return xxx_messageInfo_Test_Blueprint_Invocation.Size(m)
}
func (m *Test_Blueprint_Invocation) XXX_DiscardUnknown() {
	xxx_messageInfo_Test_Blueprint_Invocation.DiscardUnknown(m)
}

var xxx_messageInfo_Test_Blueprint_Invocation proto.InternalMessageInfo

func (m *Test_Blueprint_Invocation) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Test_Blueprint_Invocation) GetSerializedRequest() []byte {
	if m != nil {
		return m.SerializedRequest
	}
	return nil
}

// An issue found in the test.
type Issue struct {
	// The type of the issue.
	Type Issue_Type `protobuf:"varint,1,opt,name=type,proto3,enum=google.showcase.v1alpha3.Issue_Type" json:"type,omitempty"`
	// The severity of the issue.
	Severity Issue_Severity `protobuf:"varint,2,opt,name=severity,proto3,enum=google.showcase.v1alpha3.Issue_Severity" json:"severity,omitempty"`
	// A description of the issue.
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Issue) Reset()         { *m = Issue{} }
func (m *Issue) String() string { return proto.CompactTextString(m) }
func (*Issue) ProtoMessage()    {}
func (*Issue) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{9}
}
func (m *Issue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Issue.Unmarshal(m, b)
}
func (m *Issue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Issue.Marshal(b, m, deterministic)
}
func (dst *Issue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Issue.Merge(dst, src)
}
func (m *Issue) XXX_Size() int {
	return xxx_messageInfo_Issue.Size(m)
}
func (m *Issue) XXX_DiscardUnknown() {
	xxx_messageInfo_Issue.DiscardUnknown(m)
}

var xxx_messageInfo_Issue proto.InternalMessageInfo

func (m *Issue) GetType() Issue_Type {
	if m != nil {
		return m.Type
	}
	return Issue_TYPE_UNSPECIFIED
}

func (m *Issue) GetSeverity() Issue_Severity {
	if m != nil {
		return m.Severity
	}
	return Issue_SEVERITY_UNSPECIFIED
}

func (m *Issue) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// The request for the ListTests method.
type ListTestsRequest struct {
	// The session.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The maximum number of tests to return per page.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The page token, for retrieving subsequent pages.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTestsRequest) Reset()         { *m = ListTestsRequest{} }
func (m *ListTestsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTestsRequest) ProtoMessage()    {}
func (*ListTestsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{10}
}
func (m *ListTestsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTestsRequest.Unmarshal(m, b)
}
func (m *ListTestsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTestsRequest.Marshal(b, m, deterministic)
}
func (dst *ListTestsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTestsRequest.Merge(dst, src)
}
func (m *ListTestsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTestsRequest.Size(m)
}
func (m *ListTestsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTestsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTestsRequest proto.InternalMessageInfo

func (m *ListTestsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListTestsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListTestsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// The response for the ListTests method.
type ListTestsResponse struct {
	// The tests being returned.
	Tests []*Test `protobuf:"bytes,1,rep,name=tests,proto3" json:"tests,omitempty"`
	// The next page token, if any.
	// An empty value here means the last page has been reached.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTestsResponse) Reset()         { *m = ListTestsResponse{} }
func (m *ListTestsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTestsResponse) ProtoMessage()    {}
func (*ListTestsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{11}
}
func (m *ListTestsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTestsResponse.Unmarshal(m, b)
}
func (m *ListTestsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTestsResponse.Marshal(b, m, deterministic)
}
func (dst *ListTestsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTestsResponse.Merge(dst, src)
}
func (m *ListTestsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTestsResponse.Size(m)
}
func (m *ListTestsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTestsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTestsResponse proto.InternalMessageInfo

func (m *ListTestsResponse) GetTests() []*Test {
	if m != nil {
		return m.Tests
	}
	return nil
}

func (m *ListTestsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// A TestRun is the result of running a Test.
type TestRun struct {
	// The name of the test.
	// The tests/* portion of the names are hard-coded, and do not change
	// from session to session.
	Test string `protobuf:"bytes,1,opt,name=test,proto3" json:"test,omitempty"`
	// An issue found with the test run. If empty, this test run was successful.
	Issue                *Issue   `protobuf:"bytes,2,opt,name=issue,proto3" json:"issue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRun) Reset()         { *m = TestRun{} }
func (m *TestRun) String() string { return proto.CompactTextString(m) }
func (*TestRun) ProtoMessage()    {}
func (*TestRun) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{12}
}
func (m *TestRun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRun.Unmarshal(m, b)
}
func (m *TestRun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRun.Marshal(b, m, deterministic)
}
func (dst *TestRun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRun.Merge(dst, src)
}
func (m *TestRun) XXX_Size() int {
	return xxx_messageInfo_TestRun.Size(m)
}
func (m *TestRun) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRun.DiscardUnknown(m)
}

var xxx_messageInfo_TestRun proto.InternalMessageInfo

func (m *TestRun) GetTest() string {
	if m != nil {
		return m.Test
	}
	return ""
}

func (m *TestRun) GetIssue() *Issue {
	if m != nil {
		return m.Issue
	}
	return nil
}

// Request message for deleting a test.
type DeleteTestRequest struct {
	// The test to be deleted.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTestRequest) Reset()         { *m = DeleteTestRequest{} }
func (m *DeleteTestRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTestRequest) ProtoMessage()    {}
func (*DeleteTestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{13}
}
func (m *DeleteTestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTestRequest.Unmarshal(m, b)
}
func (m *DeleteTestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTestRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteTestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTestRequest.Merge(dst, src)
}
func (m *DeleteTestRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTestRequest.Size(m)
}
func (m *DeleteTestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTestRequest proto.InternalMessageInfo

func (m *DeleteTestRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type VerifyTestRequest struct {
	// The test to have an answer registered to it.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The answer from the test.
	Answer []byte `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	// The answers from the test if multiple are to be checked
	Answers              [][]byte `protobuf:"bytes,3,rep,name=answers,proto3" json:"answers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyTestRequest) Reset()         { *m = VerifyTestRequest{} }
func (m *VerifyTestRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyTestRequest) ProtoMessage()    {}
func (*VerifyTestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{14}
}
func (m *VerifyTestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyTestRequest.Unmarshal(m, b)
}
func (m *VerifyTestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyTestRequest.Marshal(b, m, deterministic)
}
func (dst *VerifyTestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyTestRequest.Merge(dst, src)
}
func (m *VerifyTestRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyTestRequest.Size(m)
}
func (m *VerifyTestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyTestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyTestRequest proto.InternalMessageInfo

func (m *VerifyTestRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VerifyTestRequest) GetAnswer() []byte {
	if m != nil {
		return m.Answer
	}
	return nil
}

func (m *VerifyTestRequest) GetAnswers() [][]byte {
	if m != nil {
		return m.Answers
	}
	return nil
}

type VerifyTestResponse struct {
	// An issue if check answer was unsuccessful. This will be empty if the check answer succeeded.
	Issue                *Issue   `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyTestResponse) Reset()         { *m = VerifyTestResponse{} }
func (m *VerifyTestResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyTestResponse) ProtoMessage()    {}
func (*VerifyTestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_testing_467553a5d21b6404, []int{15}
}
func (m *VerifyTestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyTestResponse.Unmarshal(m, b)
}
func (m *VerifyTestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyTestResponse.Marshal(b, m, deterministic)
}
func (dst *VerifyTestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyTestResponse.Merge(dst, src)
}
func (m *VerifyTestResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyTestResponse.Size(m)
}
func (m *VerifyTestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyTestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyTestResponse proto.InternalMessageInfo

func (m *VerifyTestResponse) GetIssue() *Issue {
	if m != nil {
		return m.Issue
	}
	return nil
}

func init() {
	proto.RegisterType((*Session)(nil), "google.showcase.v1alpha3.Session")
	proto.RegisterType((*CreateSessionRequest)(nil), "google.showcase.v1alpha3.CreateSessionRequest")
	proto.RegisterType((*GetSessionRequest)(nil), "google.showcase.v1alpha3.GetSessionRequest")
	proto.RegisterType((*ListSessionsRequest)(nil), "google.showcase.v1alpha3.ListSessionsRequest")
	proto.RegisterType((*ListSessionsResponse)(nil), "google.showcase.v1alpha3.ListSessionsResponse")
	proto.RegisterType((*DeleteSessionRequest)(nil), "google.showcase.v1alpha3.DeleteSessionRequest")
	proto.RegisterType((*ReportSessionRequest)(nil), "google.showcase.v1alpha3.ReportSessionRequest")
	proto.RegisterType((*ReportSessionResponse)(nil), "google.showcase.v1alpha3.ReportSessionResponse")
	proto.RegisterType((*Test)(nil), "google.showcase.v1alpha3.Test")
	proto.RegisterType((*Test_Blueprint)(nil), "google.showcase.v1alpha3.Test.Blueprint")
	proto.RegisterType((*Test_Blueprint_Invocation)(nil), "google.showcase.v1alpha3.Test.Blueprint.Invocation")
	proto.RegisterType((*Issue)(nil), "google.showcase.v1alpha3.Issue")
	proto.RegisterType((*ListTestsRequest)(nil), "google.showcase.v1alpha3.ListTestsRequest")
	proto.RegisterType((*ListTestsResponse)(nil), "google.showcase.v1alpha3.ListTestsResponse")
	proto.RegisterType((*TestRun)(nil), "google.showcase.v1alpha3.TestRun")
	proto.RegisterType((*DeleteTestRequest)(nil), "google.showcase.v1alpha3.DeleteTestRequest")
	proto.RegisterType((*VerifyTestRequest)(nil), "google.showcase.v1alpha3.VerifyTestRequest")
	proto.RegisterType((*VerifyTestResponse)(nil), "google.showcase.v1alpha3.VerifyTestResponse")
	proto.RegisterEnum("google.showcase.v1alpha3.Session_Version", Session_Version_name, Session_Version_value)
	proto.RegisterEnum("google.showcase.v1alpha3.ReportSessionResponse_Result", ReportSessionResponse_Result_name, ReportSessionResponse_Result_value)
	proto.RegisterEnum("google.showcase.v1alpha3.Test_ExpectationLevel", Test_ExpectationLevel_name, Test_ExpectationLevel_value)
	proto.RegisterEnum("google.showcase.v1alpha3.Issue_Type", Issue_Type_name, Issue_Type_value)
	proto.RegisterEnum("google.showcase.v1alpha3.Issue_Severity", Issue_Severity_name, Issue_Severity_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestingClient is the client API for Testing service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestingClient interface {
	// Creates a new testing session.
	CreateSession(ctx context.Context, in *CreateSessionRequest, opts ...grpc.CallOption) (*Session, error)
	// Gets a testing session.
	GetSession(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*Session, error)
	// Lists the current test sessions.
	ListSessions(ctx context.Context, in *ListSessionsRequest, opts ...grpc.CallOption) (*ListSessionsResponse, error)
	// Delete a test session.
	DeleteSession(ctx context.Context, in *DeleteSessionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Report on the status of a session.
	// This generates a report detailing which tests have been completed,
	// and an overall rollup.
	ReportSession(ctx context.Context, in *ReportSessionRequest, opts ...grpc.CallOption) (*ReportSessionResponse, error)
	// List the tests of a sessesion.
	ListTests(ctx context.Context, in *ListTestsRequest, opts ...grpc.CallOption) (*ListTestsResponse, error)
	// Explicitly decline to implement a test.
	//
	// This removes the test from subsequent `ListTests` calls, and
	// attempting to do the test will error.
	//
	// This method will error if attempting to delete a required test.
	DeleteTest(ctx context.Context, in *DeleteTestRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Register a response to a test.
	//
	// In cases where a test involves registering a final answer at the
	// end of the test, this method provides the means to do so.
	VerifyTest(ctx context.Context, in *VerifyTestRequest, opts ...grpc.CallOption) (*VerifyTestResponse, error)
}

type testingClient struct {
	cc *grpc.ClientConn
}

func NewTestingClient(cc *grpc.ClientConn) TestingClient {
	return &testingClient{cc}
}

func (c *testingClient) CreateSession(ctx context.Context, in *CreateSessionRequest, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/google.showcase.v1alpha3.Testing/CreateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testingClient) GetSession(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/google.showcase.v1alpha3.Testing/GetSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testingClient) ListSessions(ctx context.Context, in *ListSessionsRequest, opts ...grpc.CallOption) (*ListSessionsResponse, error) {
	out := new(ListSessionsResponse)
	err := c.cc.Invoke(ctx, "/google.showcase.v1alpha3.Testing/ListSessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testingClient) DeleteSession(ctx context.Context, in *DeleteSessionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/google.showcase.v1alpha3.Testing/DeleteSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testingClient) ReportSession(ctx context.Context, in *ReportSessionRequest, opts ...grpc.CallOption) (*ReportSessionResponse, error) {
	out := new(ReportSessionResponse)
	err := c.cc.Invoke(ctx, "/google.showcase.v1alpha3.Testing/ReportSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testingClient) ListTests(ctx context.Context, in *ListTestsRequest, opts ...grpc.CallOption) (*ListTestsResponse, error) {
	out := new(ListTestsResponse)
	err := c.cc.Invoke(ctx, "/google.showcase.v1alpha3.Testing/ListTests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testingClient) DeleteTest(ctx context.Context, in *DeleteTestRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/google.showcase.v1alpha3.Testing/DeleteTest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testingClient) VerifyTest(ctx context.Context, in *VerifyTestRequest, opts ...grpc.CallOption) (*VerifyTestResponse, error) {
	out := new(VerifyTestResponse)
	err := c.cc.Invoke(ctx, "/google.showcase.v1alpha3.Testing/VerifyTest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestingServer is the server API for Testing service.
type TestingServer interface {
	// Creates a new testing session.
	CreateSession(context.Context, *CreateSessionRequest) (*Session, error)
	// Gets a testing session.
	GetSession(context.Context, *GetSessionRequest) (*Session, error)
	// Lists the current test sessions.
	ListSessions(context.Context, *ListSessionsRequest) (*ListSessionsResponse, error)
	// Delete a test session.
	DeleteSession(context.Context, *DeleteSessionRequest) (*empty.Empty, error)
	// Report on the status of a session.
	// This generates a report detailing which tests have been completed,
	// and an overall rollup.
	ReportSession(context.Context, *ReportSessionRequest) (*ReportSessionResponse, error)
	// List the tests of a sessesion.
	ListTests(context.Context, *ListTestsRequest) (*ListTestsResponse, error)
	// Explicitly decline to implement a test.
	//
	// This removes the test from subsequent `ListTests` calls, and
	// attempting to do the test will error.
	//
	// This method will error if attempting to delete a required test.
	DeleteTest(context.Context, *DeleteTestRequest) (*empty.Empty, error)
	// Register a response to a test.
	//
	// In cases where a test involves registering a final answer at the
	// end of the test, this method provides the means to do so.
	VerifyTest(context.Context, *VerifyTestRequest) (*VerifyTestResponse, error)
}

func RegisterTestingServer(s *grpc.Server, srv TestingServer) {
	s.RegisterService(&_Testing_serviceDesc, srv)
}

func _Testing_CreateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestingServer).CreateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.showcase.v1alpha3.Testing/CreateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestingServer).CreateSession(ctx, req.(*CreateSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Testing_GetSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestingServer).GetSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.showcase.v1alpha3.Testing/GetSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestingServer).GetSession(ctx, req.(*GetSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Testing_ListSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSessionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestingServer).ListSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.showcase.v1alpha3.Testing/ListSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestingServer).ListSessions(ctx, req.(*ListSessionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Testing_DeleteSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestingServer).DeleteSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.showcase.v1alpha3.Testing/DeleteSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestingServer).DeleteSession(ctx, req.(*DeleteSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Testing_ReportSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestingServer).ReportSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.showcase.v1alpha3.Testing/ReportSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestingServer).ReportSession(ctx, req.(*ReportSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Testing_ListTests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTestsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestingServer).ListTests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.showcase.v1alpha3.Testing/ListTests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestingServer).ListTests(ctx, req.(*ListTestsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Testing_DeleteTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestingServer).DeleteTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.showcase.v1alpha3.Testing/DeleteTest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestingServer).DeleteTest(ctx, req.(*DeleteTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Testing_VerifyTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyTestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestingServer).VerifyTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.showcase.v1alpha3.Testing/VerifyTest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestingServer).VerifyTest(ctx, req.(*VerifyTestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Testing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.showcase.v1alpha3.Testing",
	HandlerType: (*TestingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSession",
			Handler:    _Testing_CreateSession_Handler,
		},
		{
			MethodName: "GetSession",
			Handler:    _Testing_GetSession_Handler,
		},
		{
			MethodName: "ListSessions",
			Handler:    _Testing_ListSessions_Handler,
		},
		{
			MethodName: "DeleteSession",
			Handler:    _Testing_DeleteSession_Handler,
		},
		{
			MethodName: "ReportSession",
			Handler:    _Testing_ReportSession_Handler,
		},
		{
			MethodName: "ListTests",
			Handler:    _Testing_ListTests_Handler,
		},
		{
			MethodName: "DeleteTest",
			Handler:    _Testing_DeleteTest_Handler,
		},
		{
			MethodName: "VerifyTest",
			Handler:    _Testing_VerifyTest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/showcase/v1alpha3/testing.proto",
}

func init() {
	proto.RegisterFile("google/showcase/v1alpha3/testing.proto", fileDescriptor_testing_467553a5d21b6404)
}

var fileDescriptor_testing_467553a5d21b6404 = []byte{
	// 1393 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0x4b, 0x73, 0xdb, 0xd4,
	0x17, 0xff, 0xcb, 0x4e, 0xe2, 0xf8, 0x38, 0x49, 0xed, 0x5b, 0xff, 0x53, 0x8f, 0xd2, 0x47, 0xa2,
	0x96, 0x4e, 0x9a, 0x50, 0xa9, 0x49, 0x4a, 0x28, 0x29, 0x65, 0xc6, 0xb5, 0xd5, 0xd6, 0x53, 0xc7,
	0x76, 0xaf, 0x5c, 0x43, 0x19, 0x18, 0x8f, 0xe2, 0xdc, 0x3a, 0x9a, 0x3a, 0x92, 0xaa, 0x2b, 0xa7,
	0x4d, 0x43, 0x98, 0xa1, 0x1b, 0x60, 0xc5, 0x82, 0x1d, 0xc3, 0x07, 0x61, 0x86, 0x6f, 0xc0, 0x96,
	0xaf, 0xc0, 0xaa, 0x3b, 0x96, 0x74, 0xc5, 0xe8, 0xea, 0xca, 0xef, 0x57, 0x58, 0x59, 0xba, 0xf7,
	0xfc, 0xce, 0xe3, 0xa7, 0xf3, 0x32, 0x5c, 0xaf, 0x5b, 0x56, 0xbd, 0x41, 0x14, 0x7a, 0x60, 0xbd,
	0xaa, 0xe9, 0x94, 0x28, 0x47, 0x1b, 0x7a, 0xc3, 0x3e, 0xd0, 0xb7, 0x14, 0x97, 0x50, 0xd7, 0x30,
	0xeb, 0xb2, 0xed, 0x58, 0xae, 0x85, 0x52, 0xbe, 0x9c, 0x1c, 0xc8, 0xc9, 0x81, 0x9c, 0x78, 0x91,
	0x6b, 0xd0, 0x6d, 0x43, 0xd1, 0x4d, 0xd3, 0x72, 0x75, 0xd7, 0xb0, 0x4c, 0xea, 0xe3, 0xc4, 0x25,
	0x7e, 0xcb, 0xde, 0xf6, 0x9a, 0xcf, 0x15, 0x72, 0x68, 0xbb, 0xc7, 0xfe, 0xa5, 0xf4, 0x9b, 0x00,
	0x11, 0x8d, 0x50, 0x6a, 0x58, 0x26, 0x5a, 0x87, 0x29, 0x53, 0x3f, 0x24, 0x29, 0x61, 0x59, 0x58,
	0x8d, 0xde, 0xbf, 0xf0, 0x2e, 0x9d, 0x04, 0x44, 0xfd, 0x3b, 0xaa, 0x9c, 0xf0, 0xa7, 0x53, 0xcc,
	0x84, 0x50, 0x06, 0x22, 0x47, 0xc4, 0xf1, 0x4e, 0x52, 0xa1, 0x65, 0x61, 0x75, 0x61, 0xf3, 0x86,
	0x3c, 0xcc, 0x3f, 0x99, 0x1b, 0x90, 0x2b, 0x3e, 0x00, 0x07, 0x48, 0xe9, 0x2e, 0x44, 0xf8, 0x19,
	0xba, 0x00, 0xe7, 0x2b, 0x2a, 0xd6, 0x72, 0xc5, 0x42, 0xf5, 0x69, 0x41, 0x2b, 0xa9, 0x99, 0xdc,
	0x83, 0x9c, 0x9a, 0x8d, 0xff, 0x0f, 0xcd, 0x43, 0xb4, 0xb2, 0x51, 0xcd, 0xa7, 0xcb, 0xaa, 0x56,
	0x8e, 0x0b, 0x68, 0x16, 0xa6, 0x2a, 0x1b, 0xd5, 0x5b, 0xf1, 0x90, 0xa4, 0x41, 0x32, 0xe3, 0x10,
	0xdd, 0x25, 0x5c, 0x3d, 0x26, 0x2f, 0x9b, 0x84, 0xba, 0xe8, 0x2e, 0x44, 0xb8, 0xaf, 0x2c, 0x92,
	0xd8, 0xe6, 0xca, 0x58, 0xcf, 0x70, 0x80, 0x90, 0xb6, 0x20, 0xf1, 0x90, 0xb8, 0x3d, 0x1a, 0x2f,
	0x77, 0x11, 0x03, 0xef, 0xd3, 0x01, 0x65, 0x3e, 0x17, 0xd2, 0x13, 0x38, 0x9f, 0x37, 0x68, 0x80,
	0xa2, 0x01, 0x6c, 0x09, 0xa2, 0xb6, 0x5e, 0x27, 0x55, 0x6a, 0xbc, 0xf1, 0xb1, 0xd3, 0x78, 0xd6,
	0x3b, 0xd0, 0x8c, 0x37, 0x04, 0x5d, 0x02, 0x60, 0x97, 0xae, 0xf5, 0x82, 0xf8, 0x14, 0x46, 0x31,
	0x13, 0x2f, 0x7b, 0x07, 0xd2, 0x29, 0x24, 0xbb, 0x55, 0x52, 0xdb, 0x32, 0x29, 0x41, 0xf7, 0x60,
	0x36, 0xf8, 0x24, 0x29, 0x61, 0x39, 0x3c, 0x59, 0x74, 0x2d, 0x08, 0xba, 0x0e, 0xe7, 0x4c, 0xf2,
	0xda, 0xad, 0xf6, 0x99, 0x9e, 0xf7, 0x8e, 0x4b, 0x2d, 0xf3, 0xdb, 0x90, 0xcc, 0x92, 0x06, 0xe9,
	0xe3, 0x76, 0x1c, 0x13, 0xdb, 0x90, 0xc4, 0xc4, 0xb6, 0x9c, 0xb3, 0x32, 0xf8, 0xb7, 0x00, 0xff,
	0xef, 0x01, 0xf2, 0x80, 0x0b, 0x30, 0xe3, 0x10, 0xda, 0x6c, 0xb8, 0x0c, 0xbb, 0xb0, 0xb9, 0x3d,
	0x3c, 0xdc, 0x81, 0x0a, 0x64, 0xcc, 0xd0, 0x98, 0x6b, 0x41, 0x9f, 0x41, 0xd4, 0x2b, 0xab, 0xaa,
	0xd3, 0x34, 0x69, 0x2a, 0x34, 0x8e, 0xc1, 0x32, 0xa1, 0x2e, 0x6e, 0x9a, 0x78, 0xd6, 0xf5, 0x1f,
	0xa8, 0xf4, 0x08, 0x66, 0x7c, 0x8d, 0x68, 0x11, 0x10, 0x56, 0xb5, 0xa7, 0xf9, 0x72, 0x4f, 0xc2,
	0x02, 0xcc, 0x94, 0xd2, 0x9a, 0xa6, 0x66, 0xe3, 0x82, 0xf7, 0xfc, 0x20, 0x9d, 0xcb, 0xab, 0xd9,
	0x78, 0x08, 0x2d, 0x00, 0xe4, 0x0a, 0x99, 0xe2, 0x6e, 0x29, 0xaf, 0x96, 0xd5, 0x78, 0x58, 0xfa,
	0x67, 0x1a, 0xa6, 0x3c, 0xfd, 0xe8, 0x4e, 0x17, 0x39, 0xd7, 0xde, 0xa5, 0x57, 0xe0, 0x4a, 0x7f,
	0xdd, 0xb1, 0x6e, 0x40, 0x95, 0x13, 0xef, 0x27, 0x28, 0xc2, 0xaf, 0x20, 0x41, 0x5e, 0xdb, 0xa4,
	0xe6, 0x17, 0x7c, 0xb5, 0x41, 0x8e, 0x48, 0x83, 0x97, 0xa3, 0x32, 0x3a, 0x28, 0x59, 0x6d, 0xe3,
	0xf2, 0x1e, 0x0c, 0xc7, 0x49, 0xcf, 0x09, 0x5a, 0x86, 0xd8, 0x3e, 0xa1, 0x35, 0xc7, 0xb0, 0xbd,
	0xb3, 0x54, 0x98, 0x25, 0x4a, 0xe7, 0x11, 0x7a, 0x04, 0xb0, 0xd7, 0x68, 0x12, 0xdb, 0x31, 0x4c,
	0x97, 0xa6, 0xa6, 0x18, 0x9b, 0xab, 0x63, 0x0c, 0xdf, 0x0f, 0x00, 0xb8, 0x03, 0x2b, 0xfe, 0x10,
	0x86, 0x68, 0xeb, 0x06, 0x15, 0xbb, 0x18, 0xb9, 0xfb, 0x2e, 0x7d, 0x07, 0xb6, 0xc7, 0x30, 0xa2,
	0xb4, 0x95, 0x29, 0x27, 0xad, 0xe7, 0x80, 0xa8, 0x9e, 0x50, 0x42, 0xfd, 0xa1, 0xec, 0x42, 0xc4,
	0xf1, 0x93, 0x95, 0x05, 0x1a, 0xdb, 0xdc, 0x9a, 0x34, 0x0e, 0x39, 0x67, 0x1e, 0x59, 0x35, 0xc6,
	0x1b, 0x0e, 0x74, 0xa0, 0x7d, 0x38, 0xaf, 0xef, 0xef, 0x1b, 0xde, 0xa1, 0xde, 0xa8, 0xf2, 0xd3,
	0x80, 0xa2, 0xff, 0xa4, 0x1a, 0xb5, 0xf5, 0xf1, 0xaa, 0xa2, 0xa2, 0x06, 0xd0, 0x96, 0x40, 0x8b,
	0x30, 0x73, 0x48, 0xdc, 0x03, 0x6b, 0xdf, 0xe7, 0x0d, 0xf3, 0x37, 0x74, 0xd3, 0x6b, 0xe3, 0x8e,
	0xa1, 0x37, 0x8c, 0x37, 0x64, 0x3f, 0xf0, 0x85, 0x71, 0x30, 0x87, 0x13, 0xed, 0x1b, 0xae, 0x55,
	0xda, 0x83, 0x78, 0x6f, 0x72, 0xa0, 0x15, 0xb8, 0xa4, 0x7e, 0x51, 0x52, 0x33, 0xe5, 0x74, 0xd9,
	0xeb, 0xd0, 0x79, 0xb5, 0xa2, 0xe6, 0x7b, 0xd2, 0x7e, 0x0e, 0x66, 0xb1, 0xfa, 0xe4, 0x69, 0x0e,
	0xb3, 0xc4, 0x3f, 0x07, 0x31, 0xac, 0x66, 0x8a, 0xbb, 0xbb, 0x6a, 0x21, 0xcb, 0xb2, 0x7f, 0x0e,
	0x66, 0x8b, 0x25, 0x0f, 0x9c, 0xce, 0xc7, 0xc3, 0xd2, 0xef, 0x21, 0x98, 0xce, 0x51, 0xda, 0x24,
	0x5e, 0xf2, 0xbb, 0xc7, 0x36, 0xe1, 0xd5, 0x7d, 0x6d, 0x38, 0x33, 0x4c, 0x5c, 0x2e, 0x1f, 0xdb,
	0x04, 0x33, 0x04, 0xca, 0x7a, 0xad, 0xf0, 0x88, 0x38, 0x86, 0x7b, 0xcc, 0x73, 0x7e, 0x75, 0x1c,
	0x5a, 0xe3, 0xf2, 0xb8, 0x85, 0x1c, 0x9f, 0xe4, 0x12, 0x86, 0x29, 0xcf, 0x2a, 0x4a, 0x42, 0xbc,
	0xfc, 0xac, 0xa4, 0xf6, 0x84, 0x1d, 0x83, 0x88, 0xf6, 0x38, 0x57, 0x2a, 0xb1, 0xa8, 0x63, 0x10,
	0x29, 0xa9, 0x85, 0x6c, 0xae, 0xf0, 0x30, 0x1e, 0x42, 0x22, 0x2c, 0x7a, 0xf5, 0x8e, 0xb1, 0x9a,
	0x29, 0x57, 0x33, 0xc5, 0xc2, 0x83, 0x1c, 0xde, 0x65, 0xf4, 0xc5, 0xc3, 0xd2, 0xa7, 0x30, 0x1b,
	0xf8, 0x82, 0x52, 0x90, 0xd4, 0xd4, 0x8a, 0x8a, 0x73, 0xe5, 0x67, 0x3d, 0xba, 0xa3, 0x30, 0xad,
	0x62, 0x5c, 0xc4, 0xbe, 0xe6, 0xcf, 0xd3, 0xb8, 0xc0, 0x34, 0x4b, 0x0e, 0xc4, 0xbd, 0xe1, 0xe0,
	0xe5, 0x4a, 0x6b, 0xd8, 0x48, 0x30, 0x63, 0xeb, 0x0e, 0x31, 0xdd, 0x01, 0x3d, 0x96, 0xdf, 0x74,
	0x0f, 0xa4, 0xd0, 0xc8, 0x81, 0x14, 0xee, 0x1d, 0x48, 0x2f, 0x21, 0xd1, 0x61, 0x93, 0x37, 0xe7,
	0xdb, 0x30, 0xcd, 0x6a, 0x90, 0x8f, 0xa2, 0xcb, 0x63, 0x1a, 0xa9, 0x2f, 0x3c, 0xf1, 0x10, 0xfa,
	0x1a, 0x22, 0xbc, 0xff, 0xa2, 0x25, 0x98, 0xf2, 0xb0, 0x3c, 0xb6, 0xc8, 0xfb, 0x34, 0xeb, 0x9c,
	0x98, 0x1d, 0xa2, 0x8f, 0x60, 0xda, 0xf0, 0x3e, 0x2f, 0xd3, 0x12, 0xdb, 0xbc, 0x32, 0x26, 0x0b,
	0xb0, 0x2f, 0x2d, 0xdd, 0x82, 0x84, 0x3f, 0xe3, 0x98, 0xaa, 0xd6, 0xcc, 0xee, 0xec, 0x3c, 0x6d,
	0x43, 0x6c, 0x4a, 0xed, 0x41, 0xa2, 0x42, 0x1c, 0xe3, 0xf9, 0xf1, 0xa4, 0x08, 0xaf, 0x24, 0x75,
	0x93, 0xbe, 0x22, 0x0e, 0x2f, 0x37, 0xfe, 0x86, 0x52, 0x10, 0xf1, 0x9f, 0x68, 0x2a, 0xbc, 0x1c,
	0x5e, 0x9d, 0xc3, 0xc1, 0xab, 0xf4, 0x18, 0x50, 0xa7, 0x0d, 0x4e, 0x74, 0x2b, 0x44, 0xe1, 0x2c,
	0x21, 0x6e, 0xbe, 0x8d, 0xfa, 0x14, 0x1a, 0x66, 0x1d, 0x7d, 0x2f, 0xc0, 0x7c, 0xd7, 0xbe, 0x84,
	0xe4, 0xe1, 0x5a, 0x06, 0x2d, 0x56, 0xe2, 0xf8, 0x4d, 0x43, 0xba, 0xfa, 0xf6, 0xcf, 0xbf, 0x7e,
	0x0e, 0x5d, 0x92, 0x50, 0x7b, 0x89, 0x0d, 0xfa, 0xf6, 0x4e, 0xb0, 0x63, 0xa1, 0xef, 0x04, 0x80,
	0xf6, 0x92, 0x85, 0xd6, 0x87, 0xab, 0xed, 0x5b, 0xc5, 0xce, 0xe0, 0x03, 0x5a, 0x6a, 0xfb, 0x70,
	0xe2, 0x7d, 0x8c, 0x7b, 0xad, 0x09, 0xb2, 0x76, 0x8a, 0x7e, 0x14, 0x60, 0xae, 0x73, 0xc1, 0x42,
	0x37, 0x87, 0x2b, 0x1e, 0xb0, 0xdb, 0x89, 0xf2, 0xa4, 0xe2, 0xfe, 0x07, 0x94, 0x44, 0xe6, 0x54,
	0x12, 0x0d, 0x20, 0x06, 0x7d, 0x03, 0xf3, 0x5d, 0xcb, 0xd6, 0xa8, 0x0f, 0x33, 0x68, 0x2b, 0x13,
	0x17, 0x03, 0xf9, 0x60, 0xc5, 0x97, 0x55, 0x6f, 0xc5, 0x0f, 0x98, 0x58, 0x1b, 0xc9, 0xc4, 0xaf,
	0x02, 0xcc, 0x77, 0x6d, 0x4e, 0xa3, 0xcc, 0x0f, 0x5a, 0xee, 0x44, 0xe5, 0x8c, 0x2b, 0x99, 0xb4,
	0xc6, 0xfc, 0xba, 0x26, 0x49, 0x23, 0xfc, 0xda, 0x71, 0x18, 0x14, 0xfd, 0x24, 0x40, 0xb4, 0xd5,
	0x78, 0xd0, 0xda, 0x68, 0xda, 0x3b, 0x3b, 0xa2, 0xb8, 0x3e, 0x91, 0x2c, 0x77, 0xe9, 0x06, 0x73,
	0xe9, 0x2a, 0x5a, 0x19, 0xe1, 0x92, 0xbf, 0x6f, 0xa0, 0x6f, 0x01, 0xda, 0x7d, 0x63, 0x54, 0xf6,
	0xf6, 0x75, 0x97, 0xa1, 0x1f, 0x6a, 0x9d, 0x59, 0xff, 0x60, 0xed, 0xea, 0x70, 0xeb, 0x7c, 0xd9,
	0x59, 0x3b, 0x45, 0xbf, 0x08, 0x00, 0xed, 0x16, 0x31, 0xca, 0x81, 0xbe, 0x66, 0x25, 0x7e, 0x38,
	0x99, 0x30, 0x27, 0x65, 0x83, 0xb9, 0xb5, 0x2e, 0xdd, 0x98, 0xc0, 0xad, 0x9d, 0xda, 0x01, 0xa9,
	0xbd, 0x10, 0x13, 0x7f, 0xa4, 0x17, 0x1a, 0x56, 0x4d, 0x6f, 0x1c, 0x58, 0xd4, 0xdd, 0xf9, 0xf8,
	0xf6, 0xf6, 0x27, 0xf7, 0x2b, 0x70, 0xb1, 0x66, 0x1d, 0x0e, 0x35, 0x5c, 0x12, 0xbe, 0xbc, 0x5d,
	0x37, 0xdc, 0x83, 0xe6, 0x9e, 0x5c, 0xb3, 0x0e, 0x15, 0x5f, 0x4c, 0xb7, 0x0d, 0xaa, 0xd4, 0x75,
	0xdb, 0xa8, 0xdd, 0x6c, 0xfd, 0x2d, 0xa6, 0xc4, 0x39, 0x22, 0x8e, 0x52, 0x27, 0xa6, 0xcf, 0xde,
	0x0c, 0xfb, 0xd9, 0xfa, 0x37, 0x00, 0x00, 0xff, 0xff, 0x93, 0xf6, 0x4b, 0x74, 0x40, 0x0f, 0x00,
	0x00,
}

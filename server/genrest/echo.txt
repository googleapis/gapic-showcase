AUTOGENERATED STUB shim 0: "Echo" (.google.showcase.v1beta1.Echo)
(This will be replaced by a generated Go source file)

--- Imports ----------
genprotopb: "github.com/googleapis/gapic-showcase/server/genproto"
longrunningpb: "google.golang.org/genproto/googleapis/longrunning"

--- Handlers ----------

//                For :/v1beta1/echo:echo
// Match URIs of form :/v1beta1/echo:echo
func HandleEcho(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.EchoRequest
  response := Echo(request)
  // serialize back to w

}

//                For :/v1beta1/echo:expand
// Match URIs of form :/v1beta1/echo:expand
func HandleExpand(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.ExpandRequest
  response := Expand(request)
  // serialize back to w

}

//                For :/v1beta1/echo:collect
// Match URIs of form :/v1beta1/echo:collect
func HandleCollect(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.EchoRequest
  response := Collect(request)
  // serialize back to w

}

//                For :/v1beta1/echo:pagedExpand
// Match URIs of form :/v1beta1/echo:pagedExpand
func HandlePagedExpand(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.PagedExpandRequest
  response := PagedExpand(request)
  // serialize back to w

}

//                For :/v1beta1/echo:wait
// Match URIs of form :/v1beta1/echo:wait
func HandleWait(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.WaitRequest
  response := Wait(request)
  // serialize back to w

}

//                For :/v1beta1/echo:block
// Match URIs of form :/v1beta1/echo:block
func HandleBlock(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.BlockRequest
  response := Block(request)
  // serialize back to w

}



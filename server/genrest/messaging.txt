AUTOGENERATED STUB shim 2: "Messaging" (.google.showcase.v1beta1.Messaging)
(This will be replaced by a generated Go source file)

--- Imports ----------
emptypb: "github.com/golang/protobuf/ptypes/empty"
genprotopb: "github.com/googleapis/gapic-showcase/server/genproto"
longrunningpb: "google.golang.org/genproto/googleapis/longrunning"

--- Handlers ----------

//                For :/v1beta1/rooms
// Match URIs of form :/v1beta1/rooms
func HandleCreateRoom(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.CreateRoomRequest
  response := CreateRoom(request)
  // serialize back to w

}

//                For :/v1beta1/{name=rooms/*}
// Match URIs of form :/v1beta1/{name:rooms/[a-zA-Z_%\-]+}
func HandleGetRoom(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.GetRoomRequest
  response := GetRoom(request)
  // serialize back to w

}

//                For :/v1beta1/{room.name=rooms/*}
// Match URIs of form :/v1beta1/{room.name:rooms/[a-zA-Z_%\-]+}
func HandleUpdateRoom(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.UpdateRoomRequest
  response := UpdateRoom(request)
  // serialize back to w

}

//                For :/v1beta1/{name=rooms/*}
// Match URIs of form :/v1beta1/{name:rooms/[a-zA-Z_%\-]+}
func HandleDeleteRoom(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.DeleteRoomRequest
  response := DeleteRoom(request)
  // serialize back to w

}

//                For :/v1beta1/rooms
// Match URIs of form :/v1beta1/rooms
func HandleListRooms(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.ListRoomsRequest
  response := ListRooms(request)
  // serialize back to w

}

//                For :/v1beta1/{parent=rooms/*}/blurbs
// Match URIs of form :/v1beta1/{parent:rooms/[a-zA-Z_%\-]+}/blurbs
func HandleCreateBlurb(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.CreateBlurbRequest
  response := CreateBlurb(request)
  // serialize back to w

}

//                For :/v1beta1/{parent=users/*/profile}/blurbs
// Match URIs of form :/v1beta1/{parent:users/[a-zA-Z_%\-]+/profile}/blurbs
func HandleCreateBlurb_1(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.CreateBlurbRequest
  response := CreateBlurb(request)
  // serialize back to w

}

//                For :/v1beta1/{name=rooms/*/blurbs/*}
// Match URIs of form :/v1beta1/{name:rooms/[a-zA-Z_%\-]+/blurbs/[a-zA-Z_%\-]+}
func HandleGetBlurb(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.GetBlurbRequest
  response := GetBlurb(request)
  // serialize back to w

}

//                For :/v1beta1/{name=users/*/profile/blurbs/*}
// Match URIs of form :/v1beta1/{name:users/[a-zA-Z_%\-]+/profile/blurbs/[a-zA-Z_%\-]+}
func HandleGetBlurb_1(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.GetBlurbRequest
  response := GetBlurb(request)
  // serialize back to w

}

//                For :/v1beta1/{blurb.name=rooms/*/blurbs/*}
// Match URIs of form :/v1beta1/{blurb.name:rooms/[a-zA-Z_%\-]+/blurbs/[a-zA-Z_%\-]+}
func HandleUpdateBlurb(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.UpdateBlurbRequest
  response := UpdateBlurb(request)
  // serialize back to w

}

//                For :/v1beta1/{blurb.name=users/*/profile/blurbs/*}
// Match URIs of form :/v1beta1/{blurb.name:users/[a-zA-Z_%\-]+/profile/blurbs/[a-zA-Z_%\-]+}
func HandleUpdateBlurb_1(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.UpdateBlurbRequest
  response := UpdateBlurb(request)
  // serialize back to w

}

//                For :/v1beta1/{name=rooms/*/blurbs/*}
// Match URIs of form :/v1beta1/{name:rooms/[a-zA-Z_%\-]+/blurbs/[a-zA-Z_%\-]+}
func HandleDeleteBlurb(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.DeleteBlurbRequest
  response := DeleteBlurb(request)
  // serialize back to w

}

//                For :/v1beta1/{name=users/*/profile/blurbs/*}
// Match URIs of form :/v1beta1/{name:users/[a-zA-Z_%\-]+/profile/blurbs/[a-zA-Z_%\-]+}
func HandleDeleteBlurb_1(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.DeleteBlurbRequest
  response := DeleteBlurb(request)
  // serialize back to w

}

//                For :/v1beta1/{parent=rooms/*}/blurbs
// Match URIs of form :/v1beta1/{parent:rooms/[a-zA-Z_%\-]+}/blurbs
func HandleListBlurbs(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.ListBlurbsRequest
  response := ListBlurbs(request)
  // serialize back to w

}

//                For :/v1beta1/{parent=users/*/profile}/blurbs
// Match URIs of form :/v1beta1/{parent:users/[a-zA-Z_%\-]+/profile}/blurbs
func HandleListBlurbs_1(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.ListBlurbsRequest
  response := ListBlurbs(request)
  // serialize back to w

}

//                For :/v1beta1/{parent=rooms/*}/blurbs:search
// Match URIs of form :/v1beta1/{parent:rooms/[a-zA-Z_%\-]+}/blurbs:search
func HandleSearchBlurbs(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.SearchBlurbsRequest
  response := SearchBlurbs(request)
  // serialize back to w

}

//                For :/v1beta1/{parent=users/*/profile}/blurbs:search
// Match URIs of form :/v1beta1/{parent:users/[a-zA-Z_%\-]+/profile}/blurbs:search
func HandleSearchBlurbs_1(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.SearchBlurbsRequest
  response := SearchBlurbs(request)
  // serialize back to w

}

//                For :/v1beta1/{name=rooms/*}/blurbs:stream
// Match URIs of form :/v1beta1/{name:rooms/[a-zA-Z_%\-]+}/blurbs:stream
func HandleStreamBlurbs(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.StreamBlurbsRequest
  response := StreamBlurbs(request)
  // serialize back to w

}

//                For :/v1beta1/{name=users/*/profile}/blurbs:stream
// Match URIs of form :/v1beta1/{name:users/[a-zA-Z_%\-]+/profile}/blurbs:stream
func HandleStreamBlurbs_1(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.StreamBlurbsRequest
  response := StreamBlurbs(request)
  // serialize back to w

}

//                For :/v1beta1/{parent=rooms/*}/blurbs:send
// Match URIs of form :/v1beta1/{parent:rooms/[a-zA-Z_%\-]+}/blurbs:send
func HandleSendBlurbs(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.CreateBlurbRequest
  response := SendBlurbs(request)
  // serialize back to w

}

//                For :/v1beta1/{parent=users/*/profile}/blurbs:send
// Match URIs of form :/v1beta1/{parent:users/[a-zA-Z_%\-]+/profile}/blurbs:send
func HandleSendBlurbs_1(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.CreateBlurbRequest
  response := SendBlurbs(request)
  // serialize back to w

}



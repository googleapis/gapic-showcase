AUTOGENERATED STUB shim 4: "Testing" (.google.showcase.v1beta1.Testing)
(This will be replaced by a generated Go source file)

--- Imports ----------
emptypb: "github.com/golang/protobuf/ptypes/empty"
genprotopb: "github.com/googleapis/gapic-showcase/server/genproto"

--- Handlers ----------

//                For :/v1beta1/sessions
// Match URIs of form :/v1beta1/sessions
func HandleCreateSession(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.CreateSessionRequest
  response := CreateSession(request)
  // serialize back to w

}

//                For :/v1beta1/{name=sessions/*}
// Match URIs of form :/v1beta1/{name:sessions/[a-zA-Z_%\-]+}
func HandleGetSession(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.GetSessionRequest
  response := GetSession(request)
  // serialize back to w

}

//                For :/v1beta1/sessions
// Match URIs of form :/v1beta1/sessions
func HandleListSessions(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.ListSessionsRequest
  response := ListSessions(request)
  // serialize back to w

}

//                For :/v1beta1/{name=sessions/*}
// Match URIs of form :/v1beta1/{name:sessions/[a-zA-Z_%\-]+}
func HandleDeleteSession(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.DeleteSessionRequest
  response := DeleteSession(request)
  // serialize back to w

}

//                For :/v1beta1/{name=sessions/*}:report
// Match URIs of form :/v1beta1/{name:sessions/[a-zA-Z_%\-]+}:report
func HandleReportSession(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.ReportSessionRequest
  response := ReportSession(request)
  // serialize back to w

}

//                For :/v1beta1/{parent=sessions/*}/tests
// Match URIs of form :/v1beta1/{parent:sessions/[a-zA-Z_%\-]+}/tests
func HandleListTests(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.ListTestsRequest
  response := ListTests(request)
  // serialize back to w

}

//                For :/v1beta1/{name=sessions/*/tests/*}
// Match URIs of form :/v1beta1/{name:sessions/[a-zA-Z_%\-]+/tests/[a-zA-Z_%\-]+}
func HandleDeleteTest(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.DeleteTestRequest
  response := DeleteTest(request)
  // serialize back to w

}

//                For :/v1beta1/{name=sessions/*/tests/*}:check
// Match URIs of form :/v1beta1/{name:sessions/[a-zA-Z_%\-]+/tests/[a-zA-Z_%\-]+}:check
func HandleVerifyTest(w http.ResponseWriter, r *http.Request) {
  // serialize from r to: var request genprotopb.VerifyTestRequest
  response := VerifyTest(request)
  // serialize back to w

}



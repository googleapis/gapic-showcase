version: 2
workflows:
  version: 2
  main:
    jobs:
      - build
      - kotlin-smoke-test
      - release:
          requires:
            - build
            - kotlin-smoke-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: '/^v\d+(\.\d+)*$/'
      - push-image:
          requires:
            - build
            - kotlin-smoke-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: '/^v\d+(\.\d+)*$/'

jobs:
  build:
    docker:
      - image: golang:1.11
    environment:
      GOPATH: /go
    working_directory: /go/src/github.com/googleapis/gapic-showcase
    steps:
      - checkout
      - run:
          name: Check formatting
          command: "! gofmt -l ./ 2>&1 | read"
      - run:
          name: Lint code
          command: "! go lint ./... 2>&1 | read"
      - run:
          name: Examine and report suspicious constructs
          command: "! go tool vet ./ 2>&1 | read"
      - run:
          name: Install dependencies
          command: go get -v -d -t && go install
      - run:
          name: Run tests
          command: go test ./... -coverprofile=coverage.txt -covermode=atomic
      - run:
          name: Spin up showcase server.
          command: gapic-showcase start
          background: true
      - run:
          name: Sanity check the server.
          command: |
            gapic-showcase echo hello world!
            gapic-showcase expand one two three o'clock four o'clock rock

            # The echo needs to sleep to give time for the stream response
            (echo -e "hello\nworld" && sleep .1) | gapic-showcase collect
            (echo -e "hello\nworld" && sleep .1) | gapic-showcase chat
      - run:
          name: Submit coverage data to codecov.
          command: bash <(curl -s https://codecov.io/bash)
          when: always

  kotlin-smoke-test:
    machine: true
    steps:
      - checkout
      - run:
          name: Stage showcase in proto dependencies
          command: |
              git clone -b input-contract https://github.com/googleapis/api-common-protos.git
              mkdir -p api-common-protos/google/showcase/v1alpha2/
              cp schema/* api-common-protos/google/showcase/v1alpha2/
      - run:
          name: Run kotlin generation
          command: |
            mkdir koutput
            docker run --rm \
              --mount type=bind,source="$(pwd)"/api-common-protos,target=/proto \
              --mount type=bind,source="$(pwd)"/koutput,target=/generated \
              gcr.io/kotlin-gapic/kgen@sha256:e5e7b094ba19e467c5ccf9190ff31e5f7ff55dd98bf5c3b8b4972e75a5f1c5d8

  release:
    docker:
      - image: golang:1.11
    environment:
      GOPATH: /go
    working_directory: /go/src/github.com/googleapis/gapic-showcase
    steps:
      - checkout
      - run:
          name: Install server
          command: |
            go get
            go install
            echo "export VERSION=$(gapic-showcase --version)" >> $BASH_ENV
      - run:
          name: Install protoc
          command: |
            apt-get update && apt-get install -y unzip
            curl -o ~/protoc3.zip -L https://github.com/google/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip
            unzip ~/protoc3.zip -d ~/protoc3
            mv ~/protoc3/bin/* /usr/local/bin/
            mv ~/protoc3/include/* /usr/local/include/
      - run:
          name: Create release assets
          command: go run util/release/main.go
      - run:
          name: Attach compiled stuff to the tag.
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} \
                -u ${CIRCLE_PROJECT_USERNAME} \
                -r ${CIRCLE_PROJECT_REPONAME} \
                -c ${CIRCLE_SHA1} \
                v${VERSION} ./dist/

  push-image:
    machine: true
    steps:
      - checkout
      - run:
          name: Setup Auth
          command: |
            echo ${GCLOUD_SERVICE_KEY} > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Build docker image
          command: docker build -t gcr.io/gapic-showcase/gapic-showcase .
      - run:
          name: Get version
          command: echo "export VERSION=$(docker run -it gcr.io/gapic-showcase/gapic-showcase --version | perl -pe '($_)=/([0-9]+([.][0-9]+)+)/')" >> $BASH_ENV
      - run:
          name: Tag image
          command: docker tag gcr.io/gapic-showcase/gapic-showcase gcr.io/gapic-showcase/gapic-showcase:${VERSION}
      - run:
          name: Push image
          command: |
            gcloud docker -- push gcr.io/gapic-showcase/gapic-showcase:latest
            gcloud docker -- push gcr.io/gapic-showcase/gapic-showcase:${VERSION}

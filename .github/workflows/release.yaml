---
name: Showcase Release
on:
  push:
    tags:
      - '*'
  # just for testing, remove this
  pull_request:

jobs:
  inspect:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Parse tag name
        id: tag
        # TODO change to this when run on only tag push: "${GITHUB_REF#refs/*/}"
        run: echo ::set-output name=version::"v0.0.1-test"
      - name: Get release information
        id: changes
        run: echo ::set-output name=release_notes::"$(go run ./util/cmd/print_changes ${{ steps.tag.outputs.version }})"
    outputs:
      version: ${{ steps.tag.outputs.version }}
      release_notes: ${{ steps.changes.outputs.release_notes }}
  release:
    runs-on: ubuntu-latest
    needs: inspect
    steps:
      - name: Create the GitHub release.
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ needs.inspect.outputs.version }}
          release_name: ${{ needs.inspect.outputs.version }}
          body: ${{ needs.inspect.outputs.release_notes }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  proto-assets:
    runs-on: ubuntu-latest
    needs:
      - inspect
      - release
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: "1.13"
      - uses: actions/checkout@v2
      - name: Init submodule
        run: git submodule init && git submodule update
      - name: Install protoc
        run: |
          mkdir protobuf
          curl -sSL https://github.com/protocolbuffers/protobuf/releases/download/v3.15.0/protoc-3.15.0-linux-x86_64.zip > protobuf/protoc.zip
          unzip -d protobuf protobuf/protoc.zip
          echo "./protobuf/bin" >> $GITHUB_PATH
      - name: Compile proto release assets
        run: go run ./util/cmd/release -version=${{ needs.inspect.outputs.version }}
      - name: Upload proto release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          file: ./dist/*
          tag: ${{ needs.inspect.outputs.version }}
          overwrite: true
          file_glob: true
  binary-assets:
    runs-on: ubuntu-latest
    needs:
      - inspect
      - release
      - proto-assets
    strategy:
      matrix:
        osarch:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm
          - os: darwin
            arch: amd64
          # Disable windows build because it is not compiling for some reason:
          # --> windows/amd64 error: exit status 2
          # Stderr: # github.com/googleapis/gapic-showcase/cmd/gapic-showcase
          # cmd/gapic-showcase/run.go:41:80: undefined: syscall.SIGSTOP
          #
          # - os: windows
          #   arch: amd64
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.13'
      - uses: actions/checkout@v2
      # The generator does not use these,  but we need them to build the
      # binaries.
      #
      # Mousetrap is installed individually because it is needed for the
      # Windows build. Since we are building on Linux, it is not installed
      # automatically as a dependency.
      - name: Install the cross-platform build tool.
        run: |
          go get github.com/mitchellh/gox
          go get github.com/inconshreveable/mousetrap
      - name: Build for the ${{ matrix.osarch.os }}/${{ matrix.osarch.arch }} platform.
        run: |
          gox -osarch ${{ matrix.osarch.os }}/${{ matrix.osarch.arch }} -output gapic-showcase ./cmd/gapic-showcase && \
          tar cvfz gapic-showcase.tar.gz gapic-showcase
      - name: Upload the ${{ matrix.osarch.os }}/${{ matrix.osarch.arch }} release.
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          file: ./gapic-showcase.tar.gz
          asset_name: gapic-showcase-${{ needs.inspect.outputs.version }}-${{ matrix.osarch.os }}-${{ matrix.osarch.arch }}.tar.gz
          tag: ${{ needs.inspect.outputs.version }}
          overwrite: true

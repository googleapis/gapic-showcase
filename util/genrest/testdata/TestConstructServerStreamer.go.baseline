// Catalog_StreamAuthorsServer implements catalogpb.Catalog_StreamAuthorsServer to provide server-side streaming over REST, returning all the
// individual responses as part of a long JSON list.
type Catalog_StreamAuthorsServer struct{
   *resttools.ServerStreamer
}

 // Send accumulates a response to be fetched later as part of response list returned over REST.
func (streamer *Catalog_StreamAuthorsServer) Send(response *responsepb.AuthorEntry) error {
  return streamer.ServerStreamer.Send(response)
}

// Catalog_StreamTitlesServer implements catalogpb.Catalog_StreamTitlesServer to provide server-side streaming over REST, returning all the
// individual responses as part of a long JSON list.
type Catalog_StreamTitlesServer struct{
   *resttools.ServerStreamer
}

 // Send accumulates a response to be fetched later as part of response list returned over REST.
func (streamer *Catalog_StreamTitlesServer) Send(response *responsepb.TitleEntry) error {
  return streamer.ServerStreamer.Send(response)
}

// Media_StreamAudioServer implements mediapb.Media_StreamAudioServer to provide server-side streaming over REST, returning all the
// individual responses as part of a long JSON list.
type Media_StreamAudioServer struct{
   *resttools.ServerStreamer
}

 // Send accumulates a response to be fetched later as part of response list returned over REST.
func (streamer *Media_StreamAudioServer) Send(response *responsepb.AudioEntry) error {
  return streamer.ServerStreamer.Send(response)
}

// Media_StreamVideoServer implements mediapb.Media_StreamVideoServer to provide server-side streaming over REST, returning all the
// individual responses as part of a long JSON list.
type Media_StreamVideoServer struct{
   *resttools.ServerStreamer
}

 // Send accumulates a response to be fetched later as part of response list returned over REST.
func (streamer *Media_StreamVideoServer) Send(response *responsepb.VideoEntry) error {
  return streamer.ServerStreamer.Send(response)
}

